{"version":3,"sources":["components/ui/Navbar.js","helpers/fetch.js","hooks/useForm.js","components/Home.js","components/device/Device.js","components/device/DeviceList.js","components/alert/AlertFilter.js","components/alert/Alert.js","components/alert/AlertList.js","components/routers/DashboardRoutes.js","components/routers/AppRouter.js","App.js","index.js"],"names":["Navbar","className","activeClassName","exact","to","baseUrl","baseUrlAlert","fetchDevice","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchAlert","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","init","uuid","Home","devices","setDevices","getDevices","a","json","resp","ok","handleSubmit","e","preventDefault","Swal","fire","msg","useEffect","onSubmit","onChange","map","dev","i","id","type","form","description","alert_name","alert_type","min","max","Device","alerts_config","range","required","step","placeholder","onClick","moment","locale","customStyles","content","top","left","right","bottom","marginRight","transform","DeviceList","modalIsOpen","setIsOpen","formValues","setFormValues","handleDelete","handleUpdate","handleSubmitForm","closeModal","scope","createdAt","format","isOpen","onRequestClose","style","contentLabel","overlayClassName","ariaHideApp","readOnly","AlertFilter","alerts","filtered","filter","deviceUuid","al","registered_value","alert_data","Alert","setAlerts","val","setVal","getAlerts","AlertList","DashboardRoutes","path","component","AppRouter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2af3593a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport '../../styles/navStyle.css';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"logo_content\">\r\n                <div className=\"logo\">\r\n                    <i className='bx bxl-kickstarter'></i>\r\n                    <div className=\"logo_name\">Kuantum Test</div>\r\n                </div>\r\n            </div>\r\n            <ul className=\"nav_list\">\r\n                <li>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"navlink\" \r\n                        exact\r\n                        to=\"/\"\r\n                    >\r\n                        <i className='bx bx-grid-alt'></i>\r\n                        Home\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"navlink\" \r\n                        exact\r\n                        to=\"/devices\"\r\n                    >\r\n                        <i className='bx bx-devices' ></i>\r\n                        Devices\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"navlink\" \r\n                        exact\r\n                        to=\"/devicelist\"\r\n                    >\r\n                        <i className='bx bx-list-ul' ></i>\r\n                        Device List\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"navlink\" \r\n                        exact\r\n                        to=\"/alerts\"\r\n                    >\r\n                        <i className='bx bxs-bell'></i>\r\n                        Alerts by Device\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"navlink\" \r\n                        exact\r\n                        to=\"/alertlist\"\r\n                    >\r\n                        <i className='bx bx-list-ul' ></i>\r\n                        Alert List\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","\r\nconst baseUrl = \"http://localhost:4000/api/device\";\r\nconst baseUrlAlert = \"http://localhost:4000/api/alert\";\r\n\r\nconst fetchDevice = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if( method === 'GET') {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchAlert = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrlAlert }/${ endpoint }`;\r\n\r\n    if( method === 'GET') {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchDevice,\r\n    fetchAlert\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { fetchDevice, fetchAlert } from '../helpers/fetch';\r\nimport { useForm } from '../hooks/useForm';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst init = {\r\n    uuid: '',\r\n    value: 0\r\n}\r\n\r\nexport const Home = () => {\r\n\r\n    const [devices, setDevices] = useState([]);\r\n    const [values, handleInputChange] = useForm(init);\r\n\r\n    const getDevices = async() => {\r\n        const body = await fetchDevice(\"\");\r\n        const resp = await body.json();\r\n        if(resp.ok){\r\n            setDevices(resp.devices);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const resp = await fetchAlert(\"new\", values, \"POST\");\r\n        const body = await resp.json();\r\n        if(body.ok) {\r\n            Swal.fire('Success', body.msg, 'success');\r\n        } else {\r\n            Swal.fire('Error', 'An error occurred', 'error');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDevices();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                    <h1 className=\"title\">Simulated Alerts</h1>\r\n                    <br/>\r\n                <div className=\"row\">\r\n\r\n                    <form onSubmit={ handleSubmit }>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Device</label>\r\n                            <select name=\"uuid\" className=\"form-select\" onChange={ handleInputChange }>\r\n                                <option value={ 0 }>Select Device</option>\r\n                                {\r\n                                devices.map((dev, i) => (\r\n                                    <option key={ i } id={ dev.uuid } value={ dev.uuid } >{dev.name}</option>\r\n                                ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Value</label>\r\n                            <input type=\"number\" className=\"form-control\" name=\"value\" onChange={ handleInputChange } />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary form-control\">Simulate</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { fetchDevice } from '../../helpers/fetch';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst form = {\r\n    uuid: '',\r\n    name: '',\r\n    description: '',\r\n    alert_name: '',\r\n    alert_type: '',\r\n    value: 0,\r\n    min: 0,\r\n    max: 0\r\n\r\n}\r\n\r\nexport const Device = () => {\r\n\r\n    const [values, handleInputChange, reset] = useForm(form);\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const resp = await fetchDevice(\"new\", {\r\n            uuid: values.uuid,\r\n            name: values.name,\r\n            description: values.description,\r\n            alerts_config: {\r\n                name: values.alert_name,\r\n                alert_type: values.alert_type,\r\n                value: values.value,\r\n                range: {\r\n                    min: values.min,\r\n                    max: values.max\r\n                }\r\n            }\r\n        }, 'POST');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            Swal.fire('Success', body.msg, 'success');\r\n        }else{\r\n            Swal.fire('Error', 'An error occurred', 'error');\r\n        }\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <h1 className=\"title_form\">Form Devices</h1>\r\n                        <form>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <label className=\"input-group-text\">Uuid</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"uuid\" name=\"uuid\" onChange= { handleInputChange } required />\r\n                                    <label className=\"input-group-text\">Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" onChange= { handleInputChange } required />\r\n                                </div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <label className=\"input-group-text\">Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"description\" name=\"description\" onChange= { handleInputChange } required />\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <h2 className=\"title_form\">Alerts Config</h2>\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <label className=\"input-group-text\">Name</label>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"alert_name\" onChange= { handleInputChange } required />\r\n                                            <label className=\"input-group-text\">Alert Type</label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"alert_type\" name=\"alert_type\" onChange= { handleInputChange } required />\r\n                                        </div>\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <label className=\"input-group-text\">Value</label>\r\n                                            <input type=\"number\" className=\"form-control\" step=\"0.01\" id=\"value\" name=\"value\" onChange= { handleInputChange } required />\r\n                                            <span className=\"input-group-text\">Range</span>\r\n                                            <input type=\"number\" className=\"form-control\" placeholder=\"Min\" step=\"0.01\" id=\"min\" name=\"min\"  onChange= { handleInputChange } required />\r\n                                            <input type=\"number\" className=\"form-control\" placeholder=\"Max\" step=\"0.01\" id=\"max\" name=\"max\"  onChange= { handleInputChange } required />\r\n                                        </div>\r\n                                </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary form-control\" onClick={ handleSubmit }>Save</button>\r\n                        </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { fetchDevice } from '../../helpers/fetch';\r\nimport moment from 'moment';\r\nimport Swal from \"sweetalert2\";\r\nimport Modal from 'react-modal';\r\nmoment.locale('es');\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n\r\nconst form = {\r\n    uuid: '',\r\n    name: '',\r\n    description: '',\r\n    alert_name: '',\r\n    alert_type: '',\r\n    value: 0,\r\n    min: 0,\r\n    max: 0\r\n\r\n}\r\n\r\nexport const DeviceList = () => {\r\n\r\n    const [devices, setDevices] = useState([]);\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [formValues, setFormValues] = useState(form);\r\n    const {uuid, name, description, alert_name, alert_type, value, min, max} = formValues;\r\n\r\n    const getDevices = async() => {\r\n        const body = await fetchDevice(\"\");\r\n        const resp = await body.json();\r\n        if(resp.ok){\r\n            setDevices(resp.devices);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDevices();\r\n        \r\n    }, []);\r\n\r\n    const handleInputChange = async({ target }) => {\r\n        await setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    \r\n    const handleDelete = async(e) => {\r\n        e.preventDefault();\r\n        const resp = await fetchDevice(e.target.value, {}, 'DELETE');\r\n        const body = await resp.json();\r\n        if(body.ok) {\r\n            Swal.fire('Success', body.msg, 'success');\r\n            getDevices();\r\n        }\r\n    }\r\n\r\n    const handleUpdate = (dev) => {\r\n        setFormValues({\r\n            uuid: dev.uuid,\r\n            name: dev.name,\r\n            description: dev.description,\r\n            alert_name: dev.alerts_config.name,\r\n            alert_type: dev.alerts_config.alert_type,\r\n            value: dev.alerts_config.value,\r\n            min: dev.alerts_config.range.min,\r\n            max: dev.alerts_config.range.max\r\n        });\r\n        openModal();\r\n    }\r\n\r\n    const handleSubmitForm = async(e) => {\r\n        e.preventDefault();\r\n        const resp = await fetchDevice(uuid, {\r\n            uuid: uuid,\r\n            name: name,\r\n            description: description,\r\n            alerts_config: {\r\n                name: formValues.alert_name,\r\n                alert_type:alert_type,\r\n                value: value,\r\n                range: {\r\n                    min: min,\r\n                    max: max\r\n                }\r\n            }\r\n        }, 'PUT');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            Swal.fire('Success', body.msg, 'success');\r\n        }else{\r\n            Swal.fire('Error', 'An error occurred', 'error');\r\n        }\r\n        getDevices();\r\n        closeModal();\r\n    }\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n      }\r\n    \r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th scope=\"col\">UUID</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Description</th>\r\n                                <th scope=\"col\">Created</th>\r\n                                <th scope=\"col\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    devices.map((dev, i) => (\r\n                                        <tr key={ i }>\r\n                                            <td>{ dev.uuid }</td>\r\n                                            <td>{ dev.name }</td>\r\n                                            <td>{ dev.description }</td>\r\n                                            <td>{ moment(dev.createdAt).format('hh:mm:ss DD/MM/YY') }</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-primary\" onClick={ ()=>handleUpdate(dev) }><i className='bx bxs-pencil bti'></i></button>\r\n                                                <button className=\"btn btn-danger\" name=\"btnDelete\" id={ dev.uuid } value={ dev.uuid } onClick={ handleDelete }>X</button>\r\n                                            </td>\r\n\r\n                                        </tr>                                            \r\n                                    ))\r\n                                    \r\n                                }\r\n                                   \r\n                            </tbody>\r\n                </table>\r\n            </div>\r\n\r\n                    <Modal\r\n                        isOpen={modalIsOpen}\r\n                        onRequestClose={closeModal}\r\n                        style={customStyles}\r\n                        contentLabel=\"Edit Modal\"\r\n                        className=\"modal\"\r\n                        overlayClassName=\"modal-fondo\"\r\n                        ariaHideApp={false}\r\n                    >\r\n                        <h2>Edit Device</h2>\r\n                        <hr />\r\n                        <form \r\n                            className=\"container\"\r\n                            onSubmit={ handleSubmitForm }\r\n                        >\r\n                                <div className=\"input-group mb-3\">\r\n                                    <label className=\"input-group-text\">Uuid</label>\r\n                                    <input type=\"text\" className=\"form-control\" readOnly id=\"uuid\" name=\"uuid\" value={ uuid } onChange= { handleInputChange }/>\r\n                                    <label className=\"input-group-text\">Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={ name } onChange= { handleInputChange }/>\r\n                                </div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <label className=\"input-group-text\">Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"description\" name=\"description\" value={ description } onChange= { handleInputChange }/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <h2 className=\"title_form\">Alerts Config</h2>\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <label className=\"input-group-text\">Name</label>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"alert_name\" value={ alert_name } onChange= { handleInputChange }/>\r\n                                            <label className=\"input-group-text\">Alert Type</label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"alert_type\" name=\"alert_type\" value={ alert_type }  onChange= { handleInputChange }/>\r\n                                        </div>\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <label className=\"input-group-text\">Value</label>\r\n                                            <input type=\"number\" className=\"form-control\" step=\"0.01\" id=\"value\" name=\"value\" value={ value }  onChange= { handleInputChange }/>\r\n                                            <span className=\"input-group-text\">Range</span>\r\n                                            <input type=\"number\" className=\"form-control\" placeholder=\"Min\" step=\"0.01\" id=\"min\" name=\"min\" value={ min }  onChange= { handleInputChange }/>\r\n                                            <input type=\"number\" className=\"form-control\" placeholder=\"Max\" step=\"0.01\" id=\"max\" name=\"max\" value={ max }  onChange= { handleInputChange }/>\r\n                                        </div>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary form-control\">Submit</button>\r\n                        </form>\r\n                    </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nexport const AlertFilter = ({value, alerts, handleDelete}) => {\r\n\r\n    const filtered = alerts.filter((a) => a.deviceUuid === value);\r\n\r\n    return (\r\n        <>\r\n                {\r\n                    filtered.map((al, i) => (\r\n                        <tr key={ i }>\r\n                            <td>{ al.uuid }</td>\r\n                            <td>{ al.deviceUuid }</td>\r\n                            <td>{ al.registered_value }</td>\r\n                            <td>{ al.alert_data.alert_type }</td>\r\n                            <td>{ moment(al.createdAt).format('hh:mm:ss DD/MM/YY') }</td>\r\n                            <th><button className=\"btn btn-danger\" name=\"btnDelete\" id={ al.uuid } value={ al.uuid } onClick={ handleDelete }>X</button></th>\r\n                        </tr>\r\n                    ))\r\n                }\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { fetchAlert, fetchDevice } from '../../helpers/fetch';\r\nimport moment from 'moment';\r\nimport Swal from \"sweetalert2\";\r\nimport { AlertFilter } from './AlertFilter';\r\nmoment.locale('es');\r\n\r\n\r\nexport const Alert = () => {\r\n\r\n    const [alerts, setAlerts] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [val, setVal] = useState(0);\r\n\r\n    const getDevices = async() => {\r\n        const body = await fetchDevice(\"\");\r\n        const resp = await body.json();\r\n        if(resp.ok){\r\n            setDevices(resp.devices);\r\n        }\r\n    }\r\n\r\n    const getAlerts =async() => {\r\n        const resp = await fetchAlert(\"\");\r\n        const body = await resp.json();\r\n        if(body.ok) {\r\n            setAlerts(body.alerts);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDevices();\r\n        getAlerts();\r\n    }, []);\r\n\r\n    const handleDelete = async(e) => {\r\n        e.preventDefault();\r\n        const resp = await fetchAlert(e.target.value, {}, 'DELETE');\r\n        const body = await resp.json();\r\n        if(body.ok) {\r\n            Swal.fire('Success', body.msg, 'success');\r\n            getAlerts();\r\n        }\r\n    }\r\n\r\n    const handleFieldChange = ({ target }) => {\r\n\r\n        const { value } = target;\r\n        setVal(value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n\r\n            <select className=\"form-select\" onChange={ handleFieldChange }>\r\n                    <option value={ 0 }>Select Device</option>\r\n                {\r\n                    devices.map((dev, i) => (\r\n                        <option key={ i } id={ dev.uuid } value={ dev.uuid } >{dev.name}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n                <br></br>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">UUID</th>\r\n                        <th scope=\"col\">Device UUID</th>\r\n                        <th scope=\"col\">Registered Value</th>\r\n                        <th scope=\"col\">Alert Type</th>\r\n                        <th scope=\"col\">Created</th>\r\n                        <th scope=\"col\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <AlertFilter value={ val } alerts={ alerts } handleDelete={ handleDelete }/>\r\n                                \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { fetchAlert } from '../../helpers/fetch';\r\nimport moment from 'moment';\r\nimport Swal from \"sweetalert2\";\r\nmoment.locale('es');\r\n\r\n\r\nexport const AlertList = () => {\r\n\r\n    const [alerts, setAlerts] = useState([]);\r\n\r\n    const getAlerts =async() => {\r\n        const resp = await fetchAlert(\"\");\r\n        const body = await resp.json();\r\n        if(body.ok) {\r\n            setAlerts(body.alerts);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAlerts();\r\n    }, []);\r\n\r\n    const handleDelete = async(e) => {\r\n        e.preventDefault();\r\n        const resp = await fetchAlert(e.target.value, {}, 'DELETE');\r\n        const body = await resp.json();\r\n        if(body.ok) {\r\n            Swal.fire('Success', body.msg, 'success');\r\n            getAlerts();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                            <tr>\r\n                            <th scope=\"col\">UUID</th>\r\n                            <th scope=\"col\">Device UUID</th>\r\n                            <th scope=\"col\">Registered Value</th>\r\n                            <th scope=\"col\">Alert Type</th>\r\n                            <th scope=\"col\">Created</th>\r\n                            <th scope=\"col\">Action</th>\r\n                            </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            alerts.map((al, i) => (\r\n                                <tr key={ i }>\r\n                                    <td>{ al.uuid }</td>\r\n                                    <td>{ al.deviceUuid }</td>\r\n                                    <td>{ al.registered_value }</td>\r\n                                    <td>{ al.alert_data.alert_type }</td>\r\n                                    <td>{ moment(al.createdAt).format('hh:mm:ss DD/MM/YY') }</td>\r\n                                    <th><button className=\"btn btn-danger\" name=\"btnDelete\" id={ al.uuid } value={ al.uuid } onClick={ handleDelete }>X</button></th>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { Home } from '../Home'\r\nimport { Device } from '../device/Device'\r\nimport { DeviceList } from '../device/DeviceList'\r\nimport { Alert } from '../alert/Alert'\r\nimport { AlertList } from '../alert/AlertList'\r\n\r\nimport '../../styles/content.css';\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"content\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/devices\" component={Device} />\r\n                    <Route exact path=\"/devicelist\" component={DeviceList} />\r\n                    <Route exact path=\"/alerts\" component={Alert} />\r\n                    <Route exact path=\"/alertlist\" component={AlertList} />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch\r\n  } from \"react-router-dom\";\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <DashboardRoutes />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './components/routers/AppRouter';\r\n\r\nexport const App = () => {\r\n    return (\r\n        <AppRouter />\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}